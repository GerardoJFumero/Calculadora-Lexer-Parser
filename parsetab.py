
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftFACTORIALPLUSDIVIDEleftSQRTSENCOSrightUMINUSCALCULATE COS DIVIDE FACTORIAL FIN FLOAT INT LEFTBRA LEFTPAR MINUS MULTIPLY PLUS RIGHTBRA RIGHTPAR SEN SQRT\n    expressions  : expression expressions\n                | expression \n                | empty\n    expression : CALCULATE LEFTBRA expression RIGHTBRA FIN\n    expression  : expression MULTIPLY expression\n                | expression DIVIDE expression \n                | expression PLUS expression\n                | expression MINUS expression \n                | FACTORIAL expression\n                | SQRT LEFTPAR expression RIGHTPAR\n                | SEN LEFTPAR expression RIGHTPAR\n                | COS LEFTPAR expression RIGHTPAR\n    \n    expression  : INT\n                | FLOAT \n    expression : MINUS expression %prec UMINUSexpression : LEFTPAR expression RIGHTPAR\n    empty : \n    '
    
_lr_action_items = {'CALCULATE':([0,2,5,6,8,11,12,14,15,16,17,18,19,20,21,23,24,25,26,27,28,30,32,36,37,38,39,40,],[4,4,4,4,4,-13,-14,4,4,4,4,4,-15,-9,4,4,4,-5,-6,-7,-8,4,-16,-8,-10,-11,-12,-4,]),'FACTORIAL':([0,2,5,6,8,11,12,14,15,16,17,18,19,20,21,23,24,25,26,27,28,30,32,36,37,38,39,40,],[6,6,6,6,6,-13,-14,6,6,6,6,6,-15,-9,6,6,6,-5,-6,-7,-8,6,-16,-8,-10,-11,-12,-4,]),'SQRT':([0,2,5,6,8,11,12,14,15,16,17,18,19,20,21,23,24,25,26,27,28,30,32,36,37,38,39,40,],[7,7,7,7,7,-13,-14,7,7,7,7,7,-15,-9,7,7,7,-5,-6,-7,-8,7,-16,-8,-10,-11,-12,-4,]),'SEN':([0,2,5,6,8,11,12,14,15,16,17,18,19,20,21,23,24,25,26,27,28,30,32,36,37,38,39,40,],[9,9,9,9,9,-13,-14,9,9,9,9,9,-15,-9,9,9,9,-5,-6,-7,-8,9,-16,-8,-10,-11,-12,-4,]),'COS':([0,2,5,6,8,11,12,14,15,16,17,18,19,20,21,23,24,25,26,27,28,30,32,36,37,38,39,40,],[10,10,10,10,10,-13,-14,10,10,10,10,10,-15,-9,10,10,10,-5,-6,-7,-8,10,-16,-8,-10,-11,-12,-4,]),'INT':([0,2,5,6,8,11,12,14,15,16,17,18,19,20,21,23,24,25,26,27,28,30,32,36,37,38,39,40,],[11,11,11,11,11,-13,-14,11,11,11,11,11,-15,-9,11,11,11,-5,-6,-7,-8,11,-16,-8,-10,-11,-12,-4,]),'FLOAT':([0,2,5,6,8,11,12,14,15,16,17,18,19,20,21,23,24,25,26,27,28,30,32,36,37,38,39,40,],[12,12,12,12,12,-13,-14,12,12,12,12,12,-15,-9,12,12,12,-5,-6,-7,-8,12,-16,-8,-10,-11,-12,-4,]),'MINUS':([0,2,5,6,8,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,],[5,17,5,5,5,-13,-14,5,5,5,5,5,-15,-9,5,30,5,5,30,-6,-7,-8,30,5,30,-16,30,30,-8,-10,-11,-12,-4,]),'LEFTPAR':([0,2,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,27,28,30,32,36,37,38,39,40,],[8,8,8,8,21,8,23,24,-13,-14,8,8,8,8,8,-15,-9,8,8,8,-5,-6,-7,-8,8,-16,-8,-10,-11,-12,-4,]),'$end':([0,1,2,3,11,12,13,19,20,25,26,27,28,32,36,37,38,39,40,],[-17,0,-2,-3,-13,-14,-1,-15,-9,-5,-6,-7,-8,-16,-8,-10,-11,-12,-4,]),'MULTIPLY':([2,11,12,19,20,22,25,26,27,28,29,31,32,33,34,36,37,38,39,40,],[14,-13,-14,-15,-9,14,14,-6,-7,-8,14,14,-16,14,14,-8,-10,-11,-12,-4,]),'DIVIDE':([2,11,12,19,20,22,25,26,27,28,29,31,32,33,34,36,37,38,39,40,],[15,-13,-14,-15,-9,15,15,-6,15,15,15,15,-16,15,15,15,-10,-11,-12,-4,]),'PLUS':([2,11,12,19,20,22,25,26,27,28,29,31,32,33,34,36,37,38,39,40,],[16,-13,-14,-15,-9,16,16,-6,-7,-8,16,16,-16,16,16,-8,-10,-11,-12,-4,]),'LEFTBRA':([4,],[18,]),'RIGHTPAR':([11,12,19,20,22,25,26,27,31,32,33,34,36,37,38,39,40,],[-13,-14,-15,-9,32,-5,-6,-7,37,-16,38,39,-8,-10,-11,-12,-4,]),'RIGHTBRA':([11,12,19,20,25,26,27,29,32,36,37,38,39,40,],[-13,-14,-15,-9,-5,-6,-7,35,-16,-8,-10,-11,-12,-4,]),'FIN':([35,],[40,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expressions':([0,2,],[1,13,]),'expression':([0,2,5,6,8,14,15,16,17,18,21,23,24,30,],[2,2,19,20,22,25,26,27,28,29,31,33,34,36,]),'empty':([0,2,],[3,3,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expressions","S'",1,None,None,None),
  ('expressions -> expression expressions','expressions',2,'p_calculat','Calculadora.py',104),
  ('expressions -> expression','expressions',1,'p_calculat','Calculadora.py',105),
  ('expressions -> empty','expressions',1,'p_calculat','Calculadora.py',106),
  ('expression -> CALCULATE LEFTBRA expression RIGHTBRA FIN','expression',5,'p_solutio','Calculadora.py',110),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_solution','Calculadora.py',116),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_solution','Calculadora.py',117),
  ('expression -> expression PLUS expression','expression',3,'p_expression_solution','Calculadora.py',118),
  ('expression -> expression MINUS expression','expression',3,'p_expression_solution','Calculadora.py',119),
  ('expression -> FACTORIAL expression','expression',2,'p_expression_solution','Calculadora.py',120),
  ('expression -> SQRT LEFTPAR expression RIGHTPAR','expression',4,'p_expression_solution','Calculadora.py',121),
  ('expression -> SEN LEFTPAR expression RIGHTPAR','expression',4,'p_expression_solution','Calculadora.py',122),
  ('expression -> COS LEFTPAR expression RIGHTPAR','expression',4,'p_expression_solution','Calculadora.py',123),
  ('expression -> INT','expression',1,'p_expressions_int_floa','Calculadora.py',160),
  ('expression -> FLOAT','expression',1,'p_expressions_int_floa','Calculadora.py',161),
  ('expression -> MINUS expression','expression',2,'p_negativ','Calculadora.py',167),
  ('expression -> LEFTPAR expression RIGHTPAR','expression',3,'p_expressions_parenthesi','Calculadora.py',172),
  ('empty -> <empty>','empty',0,'p_empt','Calculadora.py',178),
]
